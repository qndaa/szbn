package sbnz.integracija;

import sbnz.integracija.example.facts.Course;
import sbnz.integracija.example.facts.Subscriber;
import sbnz.integracija.example.enums.PopularityCategory;
import sbnz.integracija.example.facts.Course;
import sbnz.integracija.example.facts.Subscriber;
import java.util.UUID;

import java.util.List;

global UUID subId
global UUID id;
global String status;


rule "Precondition courses"
    agenda-group "precondition"
    when
        $c: Course(courseId == id, $preconditions: preconditions)
        $s: Subscriber(userId == subId, $completed : completedCourses)
        Course(this memberOf $completed) from $preconditions
    then
    System.out.println($c);
    System.out.println($s);
    modify($s){setCanSubscribe(true)}

end

rule "Precondition courses for zero"
    agenda-group "precondition"
    when
        $c: Course(courseId == id, $preconditions: preconditions.size() == 0)
        $s: Subscriber(userId == subId)

    then
    System.out.println($c);
    modify($s){setCanSubscribe(true)}




//import sbnz.integracija.example.facts.Course;
//import sbnz.integracija.example.facts.Subscriber;

//
end




rule "not popular course -> less than 5 subsribers"
    no-loop
    when
        $course: Course($c: title)
        Number(intValue < 4) from accumulate(
            $s: Subscriber(subscribedCourses contains $course),
            count($s)
        )
    then
        $course.setPopularity(PopularityCategory.NOT_POPULAR);
        update($course)
end

rule "popular course -> between 4 and 6 subsribers"
    no-loop
    when
        $course: Course($c: title)
        Number(intValue >= 4, intValue < 6) from accumulate(
            $s: Subscriber(subscribedCourses contains $course),
            count($s)
        )
    then
        $course.setPopularity(PopularityCategory.POPULAR);
        update($course)
end

rule "highly popular course -> between 6 and 8 subsribers"
    no-loop
    when
        $course: Course($c: title)
        Number(intValue >= 6, intValue < 8) from accumulate(
            $s: Subscriber(subscribedCourses contains $course),
            count($s)
        )
    then
        $course.setPopularity(PopularityCategory.HIGHLY_POPULAR);
        update($course)
end

rule "extremely -> more that 8 subsribers"
    no-loop
    when
        $course: Course($c: title)
        Number(intValue >= 8) from accumulate(
            $s: Subscriber(subscribedCourses contains $course),
            count($s)
        )
    then
        $course.setPopularity(PopularityCategory.EXTREMELY_POPULAR);
        update($course)
end
