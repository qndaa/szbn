package sbnz.integracija;

import sbnz.integracija.example.facts.Course;
import sbnz.integracija.example.facts.Subscriber;
import sbnz.integracija.example.enums.PopularityCategory;
import sbnz.integracija.example.facts.Course;
import sbnz.integracija.example.facts.Subscriber;


import java.util.List;

global String id;

rule "Precondition courses"
    when
        $s: Subscriber($completed: completedCourses)
        $c: Course(courseId == id, $preconditions: preconditions)
        Course($completed contains this) from $preconditions
    then

    modify($s){subscribeOnCourse($c)}
//import sbnz.integracija.example.facts.Course;
//import sbnz.integracija.example.facts.Subscriber;

//
end

/*
rule "not popular course -> less than 5 subsribers"
    no-loop
    when
        $course: Course($c: title)
        $s: List() from collect(Subsrciber())
        Number(intValue < 5) from accumulate(
            $ss: Subscriber() from $s and
            $cc: List() from collect(Course(title == $c) from $s.getSubscribedCourses()),
//            Subscriber($cs: subscribedCourses) from $s and
//            $oc: Course(title == $c) from $cs,
            count($cc)
        )
    then
        $course.setPopularity(PopularityCategory.NOT_POPULAR);
        update($course)
end
*/
