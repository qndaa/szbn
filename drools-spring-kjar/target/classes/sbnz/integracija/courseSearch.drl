
//import sbnz.integracija.example.facts.Course;
//import sbnz.integracija.example.dto.CourseSearchDTO;
//
//rule "course sarch"
//    when
//        CourseSearchDTO($t: title, $a: area, $au: author, $g: grade, $p: price, $y: year, $l: level, $p: popularity)
//        $c: List() from collect(Course(title == $t, price == $p, grade == $g, level == $l, popularity == $p))
//    then

//end

import sbnz.integracija.example.facts.Course;
import sbnz.integracija.example.facts.Area;
import sbnz.integracija.example.facts.dto.CourseSearchDTO;
import java.time.LocalDate;
import sbnz.integracija.example.enums.PopularityCategory;
import sbnz.integracija.example.enums.LevelOfCourse;

query courseSearch(String _title, String _area, String _author, int _grade, double _price, LocalDate _year, LevelOfCourse _level, PopularityCategory _popularity)
    $c: Course($areas, $price, _title, $year, $level, $teacher, _popularity;)
//    and Area(name == _area) from $areas
end


//
//rule "course sarch"
//    when
//        CourseSearchDTO($t: title, $a: area, $au: author, $g: grade, $p: price, $y: year, $l: level, $p: popularity)
//        $c: List() from collect(Course(title == $t, price == $p, grade == $g, level == $l, popularity == $p))
//    then
//
//end
