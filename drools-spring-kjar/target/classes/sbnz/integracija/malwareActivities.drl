import sbnz.integracija.example.events.CourseEnrollmentEvent;
import sbnz.integracija.example.events.CourseSearchEvent;
import sbnz.integracija.example.events.LoginEvent;
import sbnz.integracija.example.facts.Subscriber;
import sbnz.integracija.example.facts.User
import java.sql.SQLOutput;

rule "tried to enroll in 5+ courses in 1 hour -> block"
//    agenda-group "malware"
    lock-on-active
    when
        $s: Subscriber($id: userId)
        Number(intValue >= 5) from accumulate (
            $c: CourseEnrollmentEvent(userId == $id) over window:time(1h),
            count($c)
        )
    then
        System.out.println("User is blocked");
        $s.setBlocked(true);
        update($s);
end

rule "tried to login 3+ times in 5 mins -> block"
//    agenda-group "malware"
    lock-on-active
    when
        $s: Subscriber($id: userId)
        Number(intValue >= 3) from accumulate (
            $c: LoginEvent(userId == $id) over window:time(5m),
            count($c)
        )
    then
        System.out.println("User is blocked");
        $s.setBlocked(true);
        update($s);
end

rule "tried to run search 10+ times in 5 mins -> block"
//    agenda-group "malware"
    lock-on-active
    when
        $s: Subscriber($id: userId)
        Number(intValue >= 3) from accumulate (
            $c: CourseSearchEvent(userId == $id) over window:time(5m),
            count($c)
        )
    then
        System.out.println("User is blocked");
        $s.setBlocked(true);
        update($s);
end